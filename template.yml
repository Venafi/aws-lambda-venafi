AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Venafi policy integration for AWS Private CA.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: aws-private-ca-policy-venafi
    Description: (UNDER DEVELOPMENT) Venafi Lambda functions for AWS that enforce enterprise security policy for the AWS Private CA.
    Author: Venafi Inc.
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['tls','ssl','certificates','aws-certificate-manager','venafi-platform','venafi-cloud']
    HomePageUrl: https://github.com/Venafi/aws-private-ca-policy-venafi
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/Venafi/aws-private-ca-policy-venafi

Parameters:
  TPPUSER:
    Type: String
    Default: ""
  TPPPASSWORD:
    NoEcho : "true"
    Type: String
    Default: ""
  TPPURL:
    Type: String
    Default: ""
  CLOUDURL:
    Type: String
    Default: ""
  CLOUDAPIKEY:
    NoEcho : "true"
    Default: ""
    Type: String
  ZONE:
    Default: ""
    Type: String
Resources:
  CertRequestLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: cert-request
      Runtime: go1.x
      CodeUri: dist/cert-request
      Description: Venfi request with a RESTful API endpoint using Amazon API Gateway.
      MemorySize: 512
      Timeout: 10
      #TODO: get role from parameters
      #TODO: attach AWSCertificateManagerPrivateCAUser role to Lambda
      #TODO: provide json for creating a role
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/lambda-venafi-role'
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/CertPolicyTable'
      Events:
        ApiRequest:
          Type: Api
          Properties:
            Path: /request
            Method: POST
  CertPolicyLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: cert-policy
      Runtime: go1.x
      CodeUri: dist/cert-policy
      Description: Venfi policy with a RESTful API endpoint using Amazon API Gateway.
      MemorySize: 512
      Timeout: 10
      #TODO: get role from parameters
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/lambda-venafi-role'
      Environment:
        Variables:
          TPPUSER:
            Fn::Sub: ${TPPUSER}
          TPPPASSWORD:
            Fn::Sub: ${TPPPASSWORD}
          TPPURL:
            Fn::Sub: ${TPPURL}
          CLOUDURL: !Ref CLOUDURL
          CLOUDAPIKEY: !Ref CLOUDAPIKEY
          ZONE:
            Fn::Sub: ${ZONE}
          TEST: "test"
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:DeleteItem'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/CertPolicyTable'
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)

  CertPolicyTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: cert-policy
      AttributeDefinitions:
        - AttributeName: PolicyID
          AttributeType: S
      KeySchema:
        - AttributeName: PolicyID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  RequestLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref CertRequestLambda]]
      RetentionInDays: 7 # days

  PolicyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref CertPolicyLambda]]
      RetentionInDays: 7 # days
Outputs:
  # This API creates a role and manages Venafi policies for enrolling certificates with an Amazon private CA.
  # To find out more about implicit resources, you can review Serverless Application Model (SAM) that is generated.
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CertRequestApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Stage/request/"
  Params:
    Description: "test"
    Value: !Ref CLOUDURL